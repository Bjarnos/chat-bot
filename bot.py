import requests
import dotenv, os
import time
import re

dotenv.load_dotenv()

login_url = "https://chat.jonazwetsloot.nl/login"
actionlogin_url = "https://chat.jonazwetsloot.nl/actionlogin"
timeline_url = "https://chat.jonazwetsloot.nl/timeline"
send_message_url = "https://chat.jonazwetsloot.nl/api/v1/message"

logindata = {
    "user": os.environ.get('user'),
    "pass": os.environ.get('pass'),
    "redirect": ""
}

print(os.environ.get('user'))
print(os.environ.get('pass'))

session = requests.Session()

headers = { 
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,application/json,text/plain,*/*;q=0.8",
    "Accept-Encoding": "gzip, deflate, br, zstd",
    "Accept-Language": "en-US,en;q=0.5",
    "Connection": "keep-alive",
    "Host": "chat.jonazwetsloot.nl",
    "Origin": "chat.jonazwetsloot.nl",
    "Priority": "u=0, i",
    "Sec-Fetch-Dest": "document",
    "Sec-Fetch-Mode": "navigate",
    "Sec-Fetch-Site": "same-origin",
    "Sec-Fetch-User": "?1",
    "Upgrade-Insecure-Requests": "1",
#   "Referer": "https://chat.jonazwetsloot.nl/login",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0",
    "Content-Type": "application/x-www-form-urlencoded",
}

stored_phpsessid = None
key = None

# API
def send_message(message):
    data = {
        "message": message,
        "attachments": "",
        "name": os.environ.get('user'),
        "key": key
    }

    response = session.post(send_message_url, data=data, headers=headers)
    
    print(f"Response Status Code (Send Message): {response.status_code}", flush=True)
    print(f"Response JSON (Send Message): {response.json()}", flush=True)

# Log in
def get_php_session():
    global stored_phpsessid

    if stored_phpsessid:
        print("Reusing stored PHPSESSID:", stored_phpsessid, flush=True)
        return stored_phpsessid

    response = session.get(login_url, headers=headers)
    for cookie in session.cookies:
        print(f"{cookie.name} = {cookie.value}")

    print(f"Response Status Code (Login): {response.status_code}", flush=True)

    if 'PHPSESSID' in response.cookies:
        stored_phpsessid = response.cookies['PHPSESSID']
        print(f"PHPSESSID from /login cookies: {stored_phpsessid}", flush=True)
        return stored_phpsessid
    else:
        print("PHPSESSID not found in /login response cookies.", flush=True)
        return None

def login(phpsessid):
    headers["Cookie"] = f"PHPSESSID={phpsessid}"

    cookies = {
        "cookies": "true",
        "PHPSESSID": phpsessid
    }

    response = session.post(actionlogin_url, data=logindata, headers=headers, cookies=cookies)
    
    print(f"Response Status Code (ActionLogin): {response.status_code}", flush=True)
    return response.status_code == 200

def get_key():
    response = session.get(timeline_url, headers=headers)
    #print(response.text)
    #match = re.search(r'name="key"\s+value="([^"]+)"', response.text)
    match = re.search(r'<input[^>]+name="key"[^>]+value="([^"]+)"', response.text)
    if match:
        key = match.group(1)
        print(f"Extracted key: {key}")
    else:
        print("Key not found in the HTML.")

login(get_php_session())
for cookie in session.cookies:
    print(f"{cookie.name} = {cookie.value}")
get_key()
send_message("This message was automatically generated by a selfbot.")
