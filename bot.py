import requests
import dotenv, os
import re

dotenv.load_dotenv()

session = requests.Session()

login_url = "https://chat.jonazwetsloot.nl/login"
actionlogin_url = "https://chat.jonazwetsloot.nl/actionlogin"
timeline_url = "https://chat.jonazwetsloot.nl/timeline"
send_message_url = "https://chat.jonazwetsloot.nl/api/v1/message"

headers = { 
    "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8,application/json,text/plain,*/*;q=0.8",
    "Accept-Encoding": "gzip, deflate, br, zstd",
    "Accept-Language": "en-US,en;q=0.5",
    "Connection": "keep-alive",
    "Host": "chat.jonazwetsloot.nl",
    "Origin": "https://chat.jonazwetsloot.nl",
    "Referer": "https://chat.jonazwetsloot.nl/login",
    "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:128.0) Gecko/20100101 Firefox/128.0",
    "Content-Type": "application/x-www-form-urlencoded",
}

def get_php_session():
    """ Get initial PHPSESSID from the login page """
    response = session.get(login_url, headers=headers)
    print(f"Login Page Response: {response.status_code}")

def login():
    """ Perform the actual login request """
    logindata = {
        "user": os.environ.get('user'),
        "pass": os.environ.get('pass'),
        "redirect": ""  # The form has this, so we keep it
    }

    response = session.post(actionlogin_url, data=logindata, headers=headers)
    print(f"Response Status Code (ActionLogin): {response.status_code}")

    return response.status_code == 200

def get_key():
    """ Extracts the key needed for sending messages """
    response = session.get(timeline_url, headers=headers)
    match = re.search(r'<input[^>]+name="key"[^>]+value="([^"]+)"', response.text)
    if match:
        return match.group(1)
    return None

def send_message(message):
    """ Sends a message using the chat API """
    key = get_key()
    if not key:
        print("Failed to retrieve key.")
        return

    data = {
        "message": message,
        "attachments": "",
        "name": os.environ.get('user'),
        "key": key
    }
    response = session.post(send_message_url, data=data, headers=headers)
    print(f"Response Status Code (Send Message): {response.status_code}")

# Run the login sequence
get_php_session()
if login():
    send_message("This message was automatically generated by a selfbot.")
